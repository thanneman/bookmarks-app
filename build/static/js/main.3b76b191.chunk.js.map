{"version":3,"sources":["BookmarksContext.js","config.js","AddBookmark/AddBookmark.js","EditBookmark/EditBookmark.js","Rating/Rating.js","BookmarkItem/BookmarkItem.js","BookmarkList/BookmarkList.js","Nav/Nav.js","App.js","index.js"],"names":["BookmarksContext","React","createContext","bookmarks","addBookmark","deleteBookmark","updateBookmark","config","API_ENDPOINT","API_KEY","process","Required","react_default","a","createElement","className","AddBookmark","state","error","handleSubmit","e","preventDefault","_e$target","target","title","url","description","rating","bookmark","value","_this","setState","fetch","concat","method","body","JSON","stringify","headers","content-type","authorization","then","res","ok","json","Promise","reject","data","context","props","history","push","catch","console","handleClickCancel","this","onSubmit","role","message","htmlFor","AddBookmark_Required","type","name","id","placeholder","required","defaultValue","min","max","onClick","Component","contextType","EditBookmark","handleChangeTitle","handleChangeUrl","handleChangeDescription","handleChangeRating","bookmarkId","match","params","_this$state","newBookmark","resetFields","newFields","_this2","responseData","_this$state2","EditBookmark_Required","onChange","Rating","stars","map","_","i","key","BookmarkItem","src_BookmarksContext","Consumer","href","rel","Rating_Rating","react_router_dom","to","cb","defaultProps","onClickDelete","BookmarkList","aria-live","BookmarkItem_BookmarkItem","Object","assign","proptTypes","PropTypes","arrayOf","shape","string","Nav","App","setBookmarks","toConsumableArray","newBookmarks","filter","bm","updatedBookmark","Authorization","contextValue","Provider","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8XASeA,EAPUC,IAAMC,cAAc,CAC3CC,UAAW,GACXC,YAAa,aACbC,eAAgB,aAChBC,eAAgB,eCNHC,EAAA,CACbC,aAAY,iDACZC,QAASC,wCCILC,SAAW,kBACfC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,OAGIC,6MASJC,MAAQ,CACNC,MAAO,QAGTC,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAAAC,EAG0BF,EAAEG,OAAtCC,EAHUF,EAGVE,MAAOC,EAHGH,EAGHG,IAAKC,EAHFJ,EAGEI,YAAaC,EAHfL,EAGeK,OAC3BC,EAAW,CACfJ,MAAOA,EAAMK,MACbJ,IAAKA,EAAII,MACTH,YAAaA,EAAYG,MACzBF,OAAQA,EAAOE,OAEjBC,EAAKC,SAAS,CAAEb,MAAO,OACvBc,MAAK,GAAAC,OAAI1B,EAAOC,aAAX,kBAAyC,CAC5C0B,OAAQ,OACRC,KAAMC,KAAKC,UAAUT,GACrBU,QAAS,CACPC,eAAgB,mBAChBC,cAAA,UAAAP,OAA2B1B,EAAOE,YAGnCgC,KAAK,SAAAC,GACJ,OAAKA,EAAIC,GAGFD,EAAIE,OAFFF,EAAIE,OAAOH,KAAK,SAAAvB,GAAK,OAAI2B,QAAQC,OAAO5B,OAIlDuB,KAAK,SAAAM,GACJvB,EAAMK,MAAQ,GACdJ,EAAII,MAAQ,GACZH,EAAYG,MAAQ,GACpBF,EAAOE,MAAQ,GACfC,EAAKkB,QAAQ5C,YAAY2C,GACzBjB,EAAKmB,MAAMC,QAAQC,KAAK,OAEzBC,MAAM,SAAAlC,GACLmC,QAAQnC,MAAMA,GACdY,EAAKC,SAAS,CAAEb,eAItBoC,kBAAoB,WAClBxB,EAAKmB,MAAMC,QAAQC,KAAK,8EAGjB,IACCjC,EAAUqC,KAAKtC,MAAfC,MACR,OACEN,EAAAC,EAAAC,cAAA,WAASC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,QACEC,UAAU,oBACVyC,SAAUD,KAAKpC,cAEfP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqB0C,KAAK,SACtCvC,GAASN,EAAAC,EAAAC,cAAA,SAAII,EAAMwC,UAEtB9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,SAAf,QAEG,IACD/C,EAAAC,EAAAC,cAAC8C,EAAD,OAEFhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,YAAY,iBACZC,UAAQ,KAGZrD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,OAAf,MAEG,IACD/C,EAAAC,EAAAC,cAAC8C,EAAD,OAEFhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,MACLC,KAAK,MACLC,GAAG,MACHC,YAAY,iCACZC,UAAQ,KAGZrD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,eAAf,eAGA/C,EAAAC,EAAAC,cAAA,YACEgD,KAAK,cACLC,GAAG,iBAGPnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,UAAf,SAEG,IACD/C,EAAAC,EAAAC,cAAC8C,EAAD,OAEFhD,EAAAC,EAAAC,cAAA,SACE+C,KAAK,SACLC,KAAK,SACLC,GAAG,SACHG,aAAa,IACbC,IAAI,IACJC,IAAI,IACJH,UAAQ,KAGZrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,UAAQ+C,KAAK,SAASQ,QAASd,KAAKD,mBAApC,UAGC,IACD1C,EAAAC,EAAAC,cAAA,UAAQ+C,KAAK,UAAb,kBA9HcS,aAApBtD,EAOGuD,YAAcvE,EAiIRgB,QC5ITL,SAAW,kBACfC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,OAGIyD,6MAYJvD,MAAQ,CACNC,MAAO,KACP6C,GAAI,GACJvC,MAAO,GACPC,IAAK,GACLC,YAAa,GACbC,OAAQ,KAgCV8C,kBAAoB,SAAArD,GAClBU,EAAKC,SAAS,CAAEP,MAAOJ,EAAEG,OAAOM,WAGlC6C,gBAAkB,SAAAtD,GAChBU,EAAKC,SAAS,CAAEN,IAAKL,EAAEG,OAAOM,WAGhC8C,wBAA0B,SAAAvD,GACxBU,EAAKC,SAAS,CAAEL,YAAaN,EAAEG,OAAOM,WAGxC+C,mBAAqB,SAAAxD,GACnBU,EAAKC,SAAS,CAAEJ,OAAQP,EAAEG,OAAOM,WAGnCV,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAEVwD,EAAe/C,EAAKmB,MAAM6B,MAAMC,OAAhCF,WAFUG,EAG8BlD,EAAKb,MAC/CgE,EAAc,CAAElB,GAJJiB,EAGVjB,GACkBvC,MAJRwD,EAGNxD,MACqBC,IAJfuD,EAGCvD,IACmBC,YAJpBsD,EAGMtD,YAC2BC,OAJjCqD,EAGmBrD,QAErCK,MAAMzB,EAAOC,aAAP,IAAAyB,OAA0B4C,GAAc,CAC5C3C,OAAQ,QACRC,KAAMC,KAAKC,UAAU4C,GACrB3C,QAAS,CACPC,eAAgB,mBAChBC,cAAA,UAAAP,OAA2B1B,EAAOE,YAGnCgC,KAAK,SAAAC,GACJ,IAAKA,EAAIC,GACP,OAAOD,EAAIE,OAAOH,KAAK,SAAAvB,GAAK,OAAI2B,QAAQC,OAAO5B,OAElDuB,KAAK,WACJX,EAAKoD,YAAYD,GACjBnD,EAAKkB,QAAQ1C,eAAe2E,GAC5BnD,EAAKmB,MAAMC,QAAQC,KAAK,OAEzBC,MAAM,SAAAlC,GACLmC,QAAQnC,MAAMA,GACdY,EAAKC,SAAS,CAAEb,eAItBgE,YAAc,SAACC,GACbrD,EAAKC,SAAS,CACZgC,GAAIoB,EAAUpB,IAAM,GACpBvC,MAAO2D,EAAU3D,OAAS,GAC1BC,IAAK0D,EAAU1D,KAAO,GACtBC,YAAayD,EAAUzD,aAAe,GACtCC,OAAQwD,EAAUxD,QAAU,QAIhC2B,kBAAoB,WAClBxB,EAAKmB,MAAMC,QAAQC,KAAK,yFApFN,IAAAiC,EAAA7B,KACVsB,EAAetB,KAAKN,MAAM6B,MAAMC,OAAhCF,WACR7C,MAAM,GAAAC,OAAG1B,EAAOC,aAAV,sBAAAyB,OAA6C4C,GAAc,CAC/D3C,OAAQ,MACRI,QAAS,CACPE,cAAA,UAAAP,OAA2B1B,EAAOE,YAGnCgC,KAAK,SAAAC,GACJ,OAAKA,EAAIC,GAGFD,EAAIE,OAFFF,EAAIE,OAAOH,KAAK,SAAAvB,GAAK,OAAI2B,QAAQC,OAAO5B,OAIlDuB,KAAK,SAAA4C,GACJD,EAAKrD,SAAS,CACZgC,GAAIsB,EAAatB,GACjBvC,MAAO6D,EAAa7D,MACpBC,IAAK4D,EAAa5D,IAClBC,YAAa2D,EAAa3D,YAC1BC,OAAQ0D,EAAa1D,WAGxByB,MAAM,SAAAlC,GACLmC,QAAQnC,MAAMA,GACdkE,EAAKrD,SAAS,CAAEb,6CA8Db,IAAAoE,EAC4C/B,KAAKtC,MAAhDC,EADDoE,EACCpE,MAAOM,EADR8D,EACQ9D,MAAOC,EADf6D,EACe7D,IAAKC,EADpB4D,EACoB5D,YAAaC,EADjC2D,EACiC3D,OACxC,OACEf,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,QACEC,UAAU,qBACVyC,SAAUD,KAAKpC,cAEfP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB0C,KAAK,SACvCvC,GAASN,EAAAC,EAAAC,cAAA,SAAII,EAAMwC,UAEtB9C,EAAAC,EAAAC,cAAA,SACE+C,KAAK,SACLC,KAAK,OAEPlD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,SAAf,QAEG,IACD/C,EAAAC,EAAAC,cAACyE,EAAD,OAEF3E,EAAAC,EAAAC,cAAA,SACE+C,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,YAAY,iBACZC,UAAQ,EACRpC,MAAOL,EACPgE,SAAUjC,KAAKkB,qBAGnB7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,OAAf,MAEG,IACD/C,EAAAC,EAAAC,cAACyE,EAAD,OAEF3E,EAAAC,EAAAC,cAAA,SACE+C,KAAK,MACLC,KAAK,MACLC,GAAG,MACHC,YAAY,iCACZC,UAAQ,EACRpC,MAAOJ,EACP+D,SAAUjC,KAAKmB,mBAGnB9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,eAAf,eAGA/C,EAAAC,EAAAC,cAAA,YACEgD,KAAK,cACLC,GAAG,cACHlC,MAAOH,EACP8D,SAAUjC,KAAKoB,2BAGnB/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO6C,QAAQ,UAAf,SAEG,IACD/C,EAAAC,EAAAC,cAACyE,EAAD,OAEF3E,EAAAC,EAAAC,cAAA,SACE+C,KAAK,SACLC,KAAK,SACLC,GAAG,SACHI,IAAI,IACJC,IAAI,IACJH,UAAQ,EACRpC,MAAOF,EACP6D,SAAUjC,KAAKqB,sBAGnBhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQ+C,KAAK,SAASQ,QAASd,KAAKD,mBAApC,UAGC,IACD1C,EAAAC,EAAAC,cAAA,UAAQ+C,KAAK,UAAb,kBA7LeS,aAArBE,EAUGD,YAAcvE,EA6LRwE,8BC7MA,SAASiB,EAAOxC,GAC7B,IAAMyC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGC,IAAI,SAACC,EAAGC,GAAJ,OAC/BA,EAAI5C,EAAMpB,MACPjB,EAAAC,EAAAC,cAAA,QAAMgF,IAAKD,GAAX,WACAjF,EAAAC,EAAAC,cAAA,QAAMgF,IAAKD,GAAX,aAEN,OACEjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZ2E,SCkBQ,SAASK,EAAa9C,GACnC,OACErC,EAAAC,EAAAC,cAACkF,EAAiBC,SAAlB,KACG,SAACjD,GAAD,OACCpC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,KACEoF,KAAMjD,EAAMxB,IACZF,OAAO,SACP4E,IAAI,uBACHlD,EAAMzB,QAGXZ,EAAAC,EAAAC,cAACsF,EAAD,CAAQvE,MAAOoB,EAAMtB,UAEvBf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BACVkC,EAAMvB,aAETd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAMC,GAAE,SAAArE,OAAWgB,EAAMc,KAAzB,QAGC,IACDnD,EAAAC,EAAAC,cAAA,UACEC,UAAU,4BACVsD,QAAS,kBAhDQQ,EAiDO5B,EAAMc,GAjDDwC,EAiDKvD,EAAQ3C,oBAhDtD2B,MAAM,GAAAC,OAAG1B,EAAOC,aAAV,sBAAAyB,OAA6C4C,GAAc,CAC/D3C,OAAQ,SACRI,QAAS,CACPC,eAAgB,mBAChBC,cAAA,UAAAP,OAA2B1B,EAAOE,YAGnCgC,KAAK,SAAAC,GACJ,OAAKA,EAAIC,GAGFD,EAAIE,OAFFF,EAAIE,OAAOH,KAAK,SAAAvB,GAAK,OAAI2B,QAAQC,OAAO5B,OAIlDuB,KAAK,SAAAM,GACJwD,EAAG1B,KAEJzB,MAAM,SAAAlC,GACLmC,QAAQnC,MAAMA,KAlBpB,IAA+B2D,EAAY0B,IA8C/B,cAeZR,EAAaS,aAAe,CAC1BC,cAAe,wBChEXC,mLAeK,IACCvG,EAAcoD,KAAKP,QAAnB7C,UACR,OACES,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAqB4F,YAAU,UAC1CxG,EAAUwF,IAAI,SAAA/D,GAAQ,OACrBhB,EAAAC,EAAAC,cAAC8F,EAADC,OAAAC,OAAA,CACEhB,IAAKlE,EAASmC,IACVnC,eAxBS0C,aAArBoC,EACGK,WAAa,CAClB5G,UAAW6G,IAAUC,QACnBD,IAAUE,MAAM,CACdnD,GAAIiD,IAAUG,WAJhBT,EASGF,aAAe,CACpBrG,UAAW,IAVTuG,EAaGnC,YAAcvE,EAoBR0G,QCpCA,SAASU,EAAInE,GAC1B,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAMC,GAAI,KAAV,iBAGC,IACD1F,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAMC,GAAI,iBAAV,2BC0FSe,6MAzFbpG,MAAQ,CACNd,UAAW,GACXe,MAAO,QAGToG,aAAe,SAAAnH,GACb2B,EAAKC,SAAS,CACZ5B,YACAe,MAAO,UAIXd,YAAc,SAAAwB,GACZE,EAAKC,SAAS,CACZ5B,UAAU0G,OAAAU,EAAA,EAAAV,CAAM/E,EAAKb,MAAMd,WAAlB8B,OAAA,CAA6BL,SAI1CvB,eAAiB,SAAAwE,GACf,IAAM2C,EAAe1F,EAAKb,MAAMd,UAAUsH,OAAO,SAAAC,GAAE,OACjDA,EAAG3D,KAAOc,IAEZ/C,EAAKC,SAAS,CACZ5B,UAAWqH,OAyBflH,eAAiB,SAAAqH,GACf7F,EAAKC,SAAS,CACZ5B,UAAW2B,EAAKb,MAAMd,UAAUwF,IAAI,SAAA+B,GAAE,OACnCA,EAAG3D,KAAO4D,EAAgB5D,GAAM2D,EAAKC,0FAxBxB,IAAAvC,EAAA7B,KAClBvB,MAAK,GAAAC,OAAI1B,EAAOC,aAAX,kBAAyC,CAC5C0B,OAAQ,MACRI,QAAS,CACPC,eAAgB,mBAChBqF,cAAA,UAAA3F,OAA2B1B,EAAOE,YAGnCgC,KAAK,SAAAC,GACJ,OAAKA,EAAIC,GAGFD,EAAIE,OAFFF,EAAIE,OAAOH,KAAK,SAAAvB,GAAK,OAAI2B,QAAQC,OAAO5B,OAIlDuB,KAAKc,KAAK+D,cACVlE,MAAM,SAAAlC,GACLmC,QAAQnC,MAAMA,GACdkE,EAAKrD,SAAS,CAAEb,6CAapB,IAAM2G,EAAe,CACnB1H,UAAWoD,KAAKtC,MAAMd,UACtBC,YAAamD,KAAKnD,YAClBC,eAAgBkD,KAAKlD,eACrBC,eAAgBiD,KAAKjD,gBAEvB,OACEM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OACdH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACkF,EAAiB8B,SAAlB,CAA2BjG,MAAOgG,GAChCjH,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU4F,YAAU,UACnC/F,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,IACLC,UAAWxB,IAEb9F,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CACEE,KAAK,gBACLC,UAAWlH,IAEbJ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CACEE,KAAK,oBACLC,UAAW1D,cAjFPF,aCJlB6D,IAASC,OACLxH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACIzF,EAAAC,EAAAC,cAACuH,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.3b76b191.chunk.js","sourcesContent":["import React from 'react'\n\nconst BookmarksContext = React.createContext({\n  bookmarks: [],\n  addBookmark: () => {},\n  deleteBookmark: () => {},\n  updateBookmark: () => {},\n})\n\nexport default BookmarksContext","export default {\n  API_ENDPOINT: `https://blooming-spire-89788.herokuapp.com/api`,\n  API_KEY: process.env.REACT_APP_API_KEY,\n\n}","import React, { Component } from  'react';\nimport PropTypes from 'prop-types';\nimport BookmarksContext from '../BookmarksContext';\nimport config from '../config'\nimport './AddBookmark.css';\n\nconst Required = () => (\n  <span className='AddBookmark__required'>*</span>\n)\n\nclass AddBookmark extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  static contextType = BookmarksContext;\n\n  state = {\n    error: null,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault()\n    // get the form fields from the event\n    const { title, url, description, rating } = e.target\n    const bookmark = {\n      title: title.value,\n      url: url.value,\n      description: description.value,\n      rating: rating.value,\n    }\n    this.setState({ error: null })\n    fetch(`${config.API_ENDPOINT}/api/bookmarks`, {\n      method: 'POST',\n      body: JSON.stringify(bookmark),\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${config.API_KEY}`\n      }\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(error => Promise.reject(error))\n        }\n        return res.json()\n      })\n      .then(data => {\n        title.value = ''\n        url.value = ''\n        description.value = ''\n        rating.value = ''\n        this.context.addBookmark(data)\n        this.props.history.push('/')\n      })\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  handleClickCancel = () => {\n    this.props.history.push('/')\n  };\n\n  render() {\n    const { error } = this.state\n    return (\n      <section className='AddBookmark'>\n        <h2>Create a bookmark</h2>\n        <form\n          className='AddBookmark__form'\n          onSubmit={this.handleSubmit}\n        >\n          <div className='AddBookmark__error' role='alert'>\n            {error && <p>{error.message}</p>}\n          </div>\n          <div>\n            <label htmlFor='title'>\n              Title\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              placeholder='Great website!'\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='url'>\n              URL\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='url'\n              name='url'\n              id='url'\n              placeholder='https://www.great-website.com/'\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              name='description'\n              id='description'\n            />\n          </div>\n          <div>\n            <label htmlFor='rating'>\n              Rating\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='number'\n              name='rating'\n              id='rating'\n              defaultValue='1'\n              min='1'\n              max='5'\n              required\n            />\n          </div>\n          <div className='AddBookmark__buttons'>\n            <button type='button' onClick={this.handleClickCancel}>\n              Cancel\n            </button>\n            {' '}\n            <button type='submit'>\n              Save\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddBookmark;","import React, { Component } from  'react';\nimport PropTypes from 'prop-types';\nimport BookmarksContext from '../BookmarksContext';\nimport config from '../config'\nimport './EditBookmark.css';\n\nconst Required = () => (\n  <span className='EditBookmark__required'>*</span>\n)\n\nclass EditBookmark extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.object,\n    }),\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  static contextType = BookmarksContext;\n\n  state = {\n    error: null,\n    id: '',\n    title: '',\n    url: '',\n    description: '',\n    rating: 1,\n  };\n\n  componentDidMount() {\n    const { bookmarkId } = this.props.match.params\n    fetch(`${config.API_ENDPOINT}/api/bookmarks` + `/${bookmarkId}`, {\n      method: 'GET',\n      headers: {\n        'authorization': `Bearer ${config.API_KEY}`\n      }\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(error => Promise.reject(error))\n\n        return res.json()\n      })\n      .then(responseData => {\n        this.setState({\n          id: responseData.id,\n          title: responseData.title,\n          url: responseData.url,\n          description: responseData.description,\n          rating: responseData.rating,\n        })\n      })\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  handleChangeTitle = e => {\n    this.setState({ title: e.target.value })\n  };\n\n  handleChangeUrl = e => {\n    this.setState({ url: e.target.value })\n  };\n\n  handleChangeDescription = e => {\n    this.setState({ description: e.target.value })\n  };\n\n  handleChangeRating = e => {\n    this.setState({ rating: e.target.value })\n  };\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { bookmarkId } = this.props.match.params\n    const { id, title, url, description, rating } = this.state\n    const newBookmark = { id, title, url, description, rating }\n    fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\n      method: 'PATCH',\n      body: JSON.stringify(newBookmark),\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `Bearer ${config.API_KEY}`\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(error => Promise.reject(error))\n      })\n      .then(() => {\n        this.resetFields(newBookmark)\n        this.context.updateBookmark(newBookmark)\n        this.props.history.push('/')\n      })\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  resetFields = (newFields) => {\n    this.setState({\n      id: newFields.id || '',\n      title: newFields.title || '',\n      url: newFields.url || '',\n      description: newFields.description || '',\n      rating: newFields.rating || '',\n    })\n  }\n\n  handleClickCancel = () => {\n    this.props.history.push('/')\n  };\n\n  render() {\n    const { error, title, url, description, rating } = this.state\n    return (\n      <section className='EditBookmark'>\n        <h2>Edit bookmark</h2>\n        <form\n          className='EditBookmark__form'\n          onSubmit={this.handleSubmit}\n        >\n          <div className='EditBookmark__error' role='alert'>\n            {error && <p>{error.message}</p>}\n          </div>\n          <input\n            type='hidden'\n            name='id'\n          />\n          <div>\n            <label htmlFor='title'>\n              Title\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              placeholder='Great website!'\n              required\n              value={title}\n              onChange={this.handleChangeTitle}\n            />\n          </div>\n          <div>\n            <label htmlFor='url'>\n              URL\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='url'\n              name='url'\n              id='url'\n              placeholder='https://www.great-website.com/'\n              required\n              value={url}\n              onChange={this.handleChangeUrl}\n            />\n          </div>\n          <div>\n            <label htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              name='description'\n              id='description'\n              value={description}\n              onChange={this.handleChangeDescription}\n            />\n          </div>\n          <div>\n            <label htmlFor='rating'>\n              Rating\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='number'\n              name='rating'\n              id='rating'\n              min='1'\n              max='5'\n              required\n              value={rating}\n              onChange={this.handleChangeRating}\n            />\n          </div>\n          <div className='EditBookmark__buttons'>\n            <button type='button' onClick={this.handleClickCancel}>\n              Cancel\n            </button>\n            {' '}\n            <button type='submit'>\n              Save\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default EditBookmark;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Rating.css';\n\nexport default function Rating(props) {\n  const stars = [0, 0, 0, 0, 0].map((_, i) =>\n    (i < props.value)\n      ? <span key={i}>&#9733; </span>\n      : <span key={i}>&#9734; </span>\n  );\n  return (\n    <div className=\"rating\">\n      {stars}\n    </div>\n  );\n}\n\nRating.propTypes = {\n  value: PropTypes.oneOf([1, 2, 3, 4, 5]).isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Rating from '../Rating/Rating';\nimport BookmarksContext from '../BookmarksContext';\nimport config from '../config';\nimport './BookmarkItem.css';\n\nfunction deleteBookmarkRequest(bookmarkId, cb) {\n  fetch(`${config.API_ENDPOINT}/api/bookmarks` + `/${bookmarkId}`, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `bearer ${config.API_KEY}`\n    }\n  })\n    .then(res => {\n      if (!res.ok) {\n        return res.json().then(error => Promise.reject(error))\n      }\n      return res.json()\n    })\n    .then(data => {\n      cb(bookmarkId)\n    })\n    .catch(error => {\n      console.error(error)\n    })\n}\n\nexport default function BookmarkItem(props) {\n  return (\n    <BookmarksContext.Consumer>\n      {(context) => (\n        <li className='BookmarkItem'>\n          <div className='BookmarkItem__row'>\n            <h3 className='BookmarkItem__title'>\n              <a\n                href={props.url}\n                target='_blank'\n                rel='noopener noreferrer'>\n                {props.title}\n              </a>\n            </h3>\n            <Rating value={props.rating} />\n          </div>\n          <p className='BookmarkItem__description'>\n            {props.description}\n          </p>\n          <div className='BookmarkItem__buttons'>\n            <Link to={`/edit/${props.id}`}>\n              Edit\n            </Link>\n            {' '}\n            <button\n              className='BookmarkItem__description'\n              onClick={() =>\n                deleteBookmarkRequest(props.id, context.deleteBookmark)\n              }\n            >\n              Delete\n            </button>\n          </div>\n        </li>\n      )}\n    </BookmarksContext.Consumer>\n  )\n}\n\nBookmarkItem.defaultProps = {\n  onClickDelete: () => {},\n}\n\nBookmarkItem.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  desciption: PropTypes.string,\n  rating: PropTypes.number.isRequired,\n  onClickDelete: PropTypes.func,\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BookmarksContext from '../BookmarksContext';\nimport BookmarkItem from '../BookmarkItem/BookmarkItem';\nimport './BookmarkList.css'\n\nclass BookmarkList extends Component {\n  static proptTypes = {\n    bookmarks: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      })\n    )\n  };\n\n  static defaultProps = {\n    bookmarks: []\n  };\n\n  static contextType = BookmarksContext;\n\n  render() {\n    const { bookmarks } = this.context\n    return (\n      <section className='BookmarkList'>\n        <h2>Your bookmarks</h2>\n        <ul className='BookmarkList__list' aria-live='polite'>\n          {bookmarks.map(bookmark =>\n            <BookmarkItem\n              key={bookmark.id}\n              {...bookmark}\n            />\n          )}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default BookmarkList;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Nav(props) {\n  return (\n    <nav className='Nav'>\n      <Link to={'/'}>\n        Bookmark List\n      </Link>\n      {' '}\n      <Link to={'/add-bookmark'}>\n        Add Bookmark\n      </Link>\n    </nav>\n  );\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport AddBookmark from './AddBookmark/AddBookmark';\nimport EditBookmark from './EditBookmark/EditBookmark';\nimport BookmarkList from './BookmarkList/BookmarkList';\nimport BookmarksContext from './BookmarksContext';\nimport Nav from './Nav/Nav';\nimport config from './config';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    bookmarks: [],\n    error: null,\n  };\n\n  setBookmarks = bookmarks => {\n    this.setState({\n      bookmarks,\n      error: null,\n    })\n  }\n\n  addBookmark = bookmark => {\n    this.setState({\n      bookmarks: [ ...this.state.bookmarks, bookmark ],\n    })\n  }\n\n  deleteBookmark = bookmarkId => {\n    const newBookmarks = this.state.bookmarks.filter(bm =>\n      bm.id !== bookmarkId\n    )\n    this.setState({\n      bookmarks: newBookmarks\n    })\n  }\n\n  componentDidMount() {\n    fetch(`${config.API_ENDPOINT}/api/bookmarks`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      }\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(error => Promise.reject(error))\n        }\n        return res.json()\n      })\n      .then(this.setBookmarks)\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  updateBookmark = updatedBookmark => {\n    this.setState({\n      bookmarks: this.state.bookmarks.map(bm =>\n        (bm.id !== updatedBookmark.id) ? bm : updatedBookmark\n      )\n    })\n  }\n\n  render() {\n    const contextValue = {\n      bookmarks: this.state.bookmarks,\n      addBookmark: this.addBookmark,\n      deleteBookmark: this.deleteBookmark,\n      updateBookmark: this.updateBookmark,\n    }\n    return (\n      <main className='App'>\n        <h1>Bookmarks!</h1>\n        <BookmarksContext.Provider value={contextValue}>\n          <Nav />\n          <div className='content' aria-live='polite'>\n          <Route\n              exact\n              path='/'\n              component={BookmarkList}\n            />\n            <Route\n              path='/add-bookmark'\n              component={AddBookmark}\n            />\n            <Route\n              path='/edit/:bookmarkId'\n              component={EditBookmark}\n            />\n          </div>\n        </BookmarksContext.Provider>\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}